package eightTile;

import java.io.File;

import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.ScrollPane;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.AnchorPane;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.VBox;
import javafx.scene.shape.Line;
import javafx.stage.Stage;

public class GUI extends Application {
	//position in anchor pane of root puzzle box node
	double Y = 10.0;
	double X = 585.0;
	
	//moves count
	int mc =0;
	@Override
	public void start(Stage stage) throws Exception {
		//Root PuzzleBox and A* search object
		PuzzleBox rootPb =new PuzzleBox();
		AStarSearch search = new AStarSearch(rootPb);
		
		//Array of PuzzleBoxPanes for moves
		PuzzleBoxPane[] pbPane= new PuzzleBoxPane[(rootPb.getHn()*4)];
		
		//Pain to display tree
		AnchorPane aPane = new AnchorPane();
		aPane.setMinSize(1500, 1000);
		
		//scrollbar
	    ScrollPane scroller = new ScrollPane(aPane);
		AnchorPane.setRightAnchor(scroller, 5.0); 
		
		//GridPane for controls and button
		GridPane control = new GridPane();
		Button gen = new Button("Genrate Puzzle");
		Button step = new Button("Step");
		control.add(gen, 0, 0);
		control.add(step, 0, 1);
		
		//int for tree level
		int level=0;

		
		//gen button event
		gen.setOnAction(e->{
			PuzzleBoxPane rootPbPane= new PuzzleBoxPane(rootPb,"Root");
			AnchorPane.setTopAnchor(rootPbPane.getPuzzleBoxPane(), Y);
			AnchorPane.setLeftAnchor(rootPbPane.getPuzzleBoxPane(), X);
			aPane.getChildren().add(rootPbPane.getPuzzleBoxPane());
		});
		
		//step button event
		step.setOnAction(e->{
			if(mc!=0) {
				search.step();
			}
			Y= Y+200;
			X = 10;
			for(int i=0;i <search.getCurrent().getMoves().length;i++) {
				pbPane[mc] =  new PuzzleBoxPane(search.getCurrent().getMoves()[i],"" +mc);
				AnchorPane.setTopAnchor(pbPane[mc].getPuzzleBoxPane(), Y);
				AnchorPane.setLeftAnchor(pbPane[mc].getPuzzleBoxPane(), X);
				aPane.getChildren().add(pbPane[mc].getPuzzleBoxPane());
				X=X+200;
				mc++;
			}
			
		});
		
		
		//set up stage
		Scene scene = new Scene(new BorderPane(scroller, aPane,null,  null, control),1500, 1000);
		stage.setScene(scene);
		stage.show();

	}

	public static void main(String[] args) {
		launch(args);

	}

}
