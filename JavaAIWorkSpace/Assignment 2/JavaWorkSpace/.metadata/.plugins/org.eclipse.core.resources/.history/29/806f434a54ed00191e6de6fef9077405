package eightTile;

import java.util.ArrayList;

/*Class to preform A* search*/
public class AStarSearch {
	//Current PuzzleBox
	PuzzleBox current;
	//ArrayList of PuzzleBoxs to consider for moves
	ArrayList<PuzzleBox> possibleMoves; 
	
	/**<h1> Constructor </h1>
	 * Initializes A* search obj with given puzzle book(should be root
	 * <p>
	 * @param root			: First puzzle box considerd in A* search
	 * @postcondition A A* search obj has been instatiated with a root puzzle box
	 * */
	public AStarSearch(PuzzleBox root) {
		current = root;
		possibleMoves = new ArrayList<PuzzleBox>();
		possibleMoves.add(root);
	}
	
	/**<h1>step</h1>
	 * Finds the next move by finding lowest f(n) and expanding associated puzzle 
	 * boxes moves, then sorting them into possibleMoves by lowest f(n)
	 * <p>
	 * @postcondition current and possibleMoves has been updated 
	 * */
	public void step() {
		//set current to puzzle box with lowest f(n) 
		current = possibleMoves.get(0);
		//generate moves
		current.genMoves();
		//add them to ArrayList of possibleMoves
		for(int i=0; i < current.getMoves().length;i++) {
			possibleMoves.add(current.getMoves()[i]);
		}
		//sort possibleMoves
		for(int i=0; i < possibleMoves.size(); i++) {
			for(int j=0; j < possibleMoves.size(); j++) {
				//if(possibleMoves.get(i) )
			}
		}
	}
}
