package RoutFinder;

import javafx.scene.control.Label;
import javafx.scene.layout.AnchorPane;
import javafx.scene.shape.Line;

public class Edge {
	//line to show edge
	private Line line;
	//cost of traversing edge
	private int gn;
	//Label for displaying g(n)
	private Label label;
	//first node associated with this edge
	private Node firstNode;
	//first node associated with this edge
	private Node secondNode;
	
	/**<h1>Constructor</h1>
	 * Constructs object based on given parameters
	 * <p>
	 * @param gn				: int indicating cost of traversing this edge
	 * @param firstNode			: First Node this edge is attached to 
	 * @param secondNode		: Second Node this edge is attached to
	 * @postioncondition		: An Edge object has been instantiated .
	 * */
	public Edge(int gn, Node firstNode, Node secondNode) {
		this.gn = gn;
		this.firstNode = firstNode;
		this.secondNode = secondNode;
		this.label = new Label("g(n)="+gn);
		//create line base on center of give nodes' circles
		
		this.line = new Line(firstNode.getCircle().getCenterX(), firstNode.getCircle().getCenterY(),
							 secondNode.getCircle().getCenterX(), secondNode.getCircle().getCenterY());
		AnchorPane.setTopAnchor(line, Math.abs(( firstNode.getCircle().getCenterY() -secondNode.getCircle().getCenterY() )));
		AnchorPane.setLeftAnchor(line, Math.abs(( firstNode.getCircle().getCenterX() -secondNode.getCircle().getCenterX() )));
		System.out.println(firstNode.getCircle().getCenterX());
		System.out.println(Math.abs(( firstNode.getCircle().getCenterY() -secondNode.getCircle().getCenterY() )));
		
		//this.line = new Line(100.0 , 500.0, 500.0, 100.0);
		//AnchorPane.setTopAnchor(line, 200.0);
		//AnchorPane.setLeftAnchor(line, 200.0);
		
		this.line.setFill(javafx.scene.paint.Color.BLUEVIOLET);
		this.line.resize(1.5, 1.5);
	}
	/**<h1>Get Line</h1>
	 * Returns the line associated with this edge
	 * <p>
	 * @return line				: Line associated with this edge
	 * @postcondition			: A Line Object has been returned
	 * */
	public Line getLine() {
		return this.line;
	}
	
}
